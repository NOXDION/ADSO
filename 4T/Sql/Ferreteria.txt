CREATE DATABASE ferreteria;

CREATE TABLE herramientas (descripcion VARCHAR(20) NOT NULL,
                        estanteria INT NOT NULL,
                        unidades INT NOT NULL
                        );

INSERT INTO herramientas VALUES ('Alicates', 1, 10);
INSERT INTO herramientas VALUES ('Soldador', 1, 15);
INSERT INTO herramientas VALUES ('Guantes', 2, 7);
INSERT INTO herramientas VALUES ('Martillo', 3, 10);
INSERT INTO herramientas VALUES ('Sierra', 4, 5);
INSERT INTO herramientas VALUES ('Destornillador', 3, 7);
INSERT INTO herramientas VALUES ('Metro', 5, 15);
INSERT INTO herramientas VALUES ('Escofina', 6, 5);
INSERT INTO herramientas VALUES ('Lima', 6, 10);
INSERT INTO herramientas VALUES ('Cortador', 4, 5);

-----------------------------------------------------------------------
-- Consultas

-- 1) Dada la tabla HERRAMIENTAS, visualizar por cada estantería la suma de las unidades.
SELECT estanteria, SUM(unidades) as TotalHerramientas FROM herramientas
GROUP BY estanteria;

-- 2) Visualizar la estantería con más unidades de la tabla HERRAMIENTAS.
SELECT estanteria, SUM(unidades) AS TotalUnidades FROM herramientas
GROUP BY estanteria
ORDER BY TotalUnidades DESC LIMIT 1;

-- 3) Visualizar las diferentes estanterías de la tabla HERRAMIENTAS ordenados descendentemente por estantería.
SELECT estanteria FROM herramientas
GROUP BY estanteria DESC;

-- 4) Averiguar cuántas unidades tiene cada estantería.
SELECT estanteria, SUM(unidades) as TotalUnidades FROM herramientas
GROUP BY estanteria;

-- 5) Visualizar las estanterías que tengan más de 15 unidades.
SELECT estanteria, SUM(unidades) as Unidades FROM herramientas
GROUP BY estanteria HAVING SUM(unidades) > 15;

-- 6) ¿Cuál es la estantería que tiene más unidades?
SELECT estanteria, SUM(unidades) as Unidades FROM herramientas
GROUP BY estanteria
ORDER BY SUM(unidades) DESC LIMIT 1;

-----------------------------------------------------------------------------
-- Funciones, procedimientos almacenados y vistas

-- 1) Dada la tabla HERRAMIENTAS, visualizar por cada estantería la suma de las unidades.
DELIMITER //
CREATE FUNCTION total_herramientas_por_estanteria(var INT) RETURNS INT
BEGIN
  DECLARE totalHerramientas INT;
  SELECT SUM(unidades) INTO totalHerramientas FROM herramientas WHERE estanteria = var;
  RETURN totalHerramientas;
END//
DELIMITER ;

SELECT total_herramientas_por_estanteria(4);


-- 2) Visualizar la estantería con más unidades de la tabla HERRAMIENTAS.
DELIMITER //
CREATE PROCEDURE estanteria_con_mas_unidades()
BEGIN
  SELECT estanteria, SUM(unidades) AS TotalUnidades FROM herramientas
  GROUP BY estanteria
  ORDER BY TotalUnidades DESC LIMIT 1;
END//
DELIMITER ;

CALL estanteria_con_mas_unidades;


-- 3) Visualizar las diferentes estanterías de la tabla HERRAMIENTAS ordenados descendentemente por estantería.
CREATE VIEW vista_estanterias AS
SELECT DISTINCT estanteria FROM herramientas
ORDER BY estanteria DESC;

SELECT * FROM vista_estanterias;


-- 4) Averiguar cuántas unidades tiene cada estantería.
DELIMITER //
CREATE PROCEDURE total_unidades_por_estanteria()
BEGIN
  SELECT estanteria, SUM(unidades) as total_unidades FROM herramientas
  GROUP BY estanteria;
END//
DELIMITER ;

CALL total_unidades_por_estanteria;


-- 5) Visualizar las estanterías que tengan más de 15 unidades.
CREATE VIEW estanterias_mayor_a_15_unidades AS
SELECT estanteria, SUM(unidades) as Unidades FROM herramientas
GROUP BY estanteria HAVING SUM(unidades) > 15;

SELECT * FROM estanterias_mayor_a_15_unidades;


-- 6) ¿Cuál es la estantería que tiene más unidades?
DELIMITER //
CREATE PROCEDURE estanteria_max_unidades()
BEGIN
  SELECT estanteria, SUM(unidades) as Unidades FROM herramientas
  GROUP BY estanteria
  ORDER BY SUM(unidades) DESC LIMIT 1;
END//
DELIMITER ;

CALL estanteria_max_unidades;

-- Triggers

-- Registrar Herramientas
CREATE TABLE herRegistradas (
  rDescripcion VARCHAR(20),
  rEstanteria INT,
  rUnidades INT
  );

CREATE TRIGGER herramientasRegistradas AFTER INSERT ON herramientas FOR EACH ROW
INSERT INTO herRegistradas
VALUES (NEW.descripcion, NEW.estanteria, NEW.unidades);

INSERT INTO herramientas VALUES ('Taladro', 2, 4);
INSERT INTO herramientas VALUES ('Llave inglesa', 1, 8);


-- Actulizacion de herramientas
CREATE TABLE herActulizadas (
  anterior_descripcion VARCHAR(20),
  anterior_estanteria INT,
  anterior_unidades INT,
  nuevo_descripcion VARCHAR(20),
  nuevo_estanteria INT,
  nuevo_unidades INT,
  usuario VARCHAR(20)
);

CREATE TRIGGER herramientasActulizadas BEFORE UPDATE ON herramientas FOR EACH ROW
INSERT INTO herActulizadas
VALUES (OLD.descripcion, OLD.estanteria, OLD.unidades, NEW.descripcion, NEW.estanteria, NEW.unidades, CURRENT_USER());

UPDATE herramientas SET unidades = 6 WHERE descripcion = 'Destornillador';
UPDATE herramientas SET estanteria = 4 WHERE descripcion = 'Martillo';
