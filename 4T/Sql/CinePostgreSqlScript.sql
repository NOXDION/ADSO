-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.tbactor
(
    acdocumento character varying(12) COLLATE pg_catalog."default" NOT NULL,
    acedad smallint NOT NULL,
    CONSTRAINT tbactor_pkey PRIMARY KEY (acdocumento)
);

CREATE TABLE IF NOT EXISTS public.tbdirector
(
    drdocumento character varying(12) COLLATE pg_catalog."default" NOT NULL,
    drnacionalidad character varying(60) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tbdirector_pkey PRIMARY KEY (drdocumento)
);

CREATE TABLE IF NOT EXISTS public.tbgenero
(
    gncodigo character varying(20) COLLATE pg_catalog."default" NOT NULL,
    gntipo character varying(60) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tbgenero_pkey PRIMARY KEY (gncodigo)
);

CREATE TABLE IF NOT EXISTS public.tbpelicula
(
    plcodigo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    pltitulo character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "plañoproduccion" smallint NOT NULL,
    plduracion time without time zone NOT NULL,
    plblanconegro boolean NOT NULL,
    CONSTRAINT tbpelicula_pkey PRIMARY KEY (plcodigo)
);

CREATE TABLE IF NOT EXISTS public.tbpeliculaactor
(
    plcodigo character varying(10) COLLATE pg_catalog."default",
    acdocumento character varying(12) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.tbpeliculadirector
(
    plcodigo character varying(10) COLLATE pg_catalog."default",
    drdocumento character varying(12) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.tbpeliculagenero
(
    plcodigo character varying(10) COLLATE pg_catalog."default",
    gncodigo character varying(12) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.tbpeliculaproductor
(
    plcodigo character varying(10) COLLATE pg_catalog."default",
    prdocumento character varying(12) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.tbproductor
(
    prdocumento character varying(12) COLLATE pg_catalog."default" NOT NULL,
    "prcompañia" character varying(60) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tbproductor_pkey PRIMARY KEY (prdocumento)
);

ALTER TABLE IF EXISTS public.tbpeliculaactor
    ADD CONSTRAINT tbpeliculaactor_acdocumento_fkey FOREIGN KEY (acdocumento)
    REFERENCES public.tbactor (acdocumento) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbpeliculaactor
    ADD CONSTRAINT tbpeliculaactor_plcodigo_fkey FOREIGN KEY (plcodigo)
    REFERENCES public.tbpelicula (plcodigo) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbpeliculadirector
    ADD CONSTRAINT tbpeliculadirector_drdocumento_fkey FOREIGN KEY (drdocumento)
    REFERENCES public.tbdirector (drdocumento) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbpeliculadirector
    ADD CONSTRAINT tbpeliculadirector_plcodigo_fkey FOREIGN KEY (plcodigo)
    REFERENCES public.tbpelicula (plcodigo) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbpeliculagenero
    ADD CONSTRAINT tbpeliculagenero_gncodigo_fkey FOREIGN KEY (gncodigo)
    REFERENCES public.tbgenero (gncodigo) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbpeliculagenero
    ADD CONSTRAINT tbpeliculagenero_plcodigo_fkey FOREIGN KEY (plcodigo)
    REFERENCES public.tbpelicula (plcodigo) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbpeliculaproductor
    ADD CONSTRAINT tbpeliculaproductor_plcodigo_fkey FOREIGN KEY (plcodigo)
    REFERENCES public.tbpelicula (plcodigo) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbpeliculaproductor
    ADD CONSTRAINT tbpeliculaproductor_prdocumento_fkey FOREIGN KEY (prdocumento)
    REFERENCES public.tbproductor (prdocumento) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;

END;